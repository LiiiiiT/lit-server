name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Setup MySQL
      uses: getong/mariadb-action@v1.1
      with:
        character set server: 'utf8'
        mysql database: ${{ secrets.DB_DATABASE }}
        mysql user: ${{ secrets.DB_USER }}
        mysql password: ${{ secrets.DB_PASSWORD }}
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USER }}/simplewhale:latest
        cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/simplewhale:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_USER }}/simplewhale:buildcache,mode=max

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPO }}
          docker tag ${{ secrets.DOCKER_USER }}/spring-cicd spring-cicd
          docker stop server
          docker run -d --rm --name server -p 80:8080 spring-cicd
